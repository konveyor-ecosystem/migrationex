[
  {
    "name": "openjdk11/openjdk8",
    "description": "This ruleset provides analysis with respect to API removals between OpenJDK 8 and 11.",
    "violations": {
      "java-removals-00120": {
        "description": "The `sun.misc.BASE64` class has been removed.",
        "category": "mandatory",
        "labels": [
          "konveyor.io/source=openjdk8-",
          "konveyor.io/source=openjdk",
          "konveyor.io/target=openjdk11+",
          "konveyor.io/target=openjdk"
        ],
        "incidents": [
          {
            "uri": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/Library.java",
            "message": "The `sun.misc.BASE64Encoder` class has been removed. \n It can be replaced with `Base64.Encoder` class instantiated using `java.util.Base64.getMimeEncoder()` method. \n For further examples on how to replace the `BASE64Encoder` class with `Base64.Encoder` one, refer to the \"Code example\" link below.",
            "codeSnip": " 1  package com.konveyor;\n 2  \n 3  \n 4  import java.io.IOException;\n 5  import java.util.*;\n 6  import java.security.*;\n 7  import sun.misc.BASE64Encoder;\n 8  import javax.servlet.http.HttpServletResponse;\n 9  \n10  public class Library {\n11      private Map<String, Book> books = new HashMap<>();\n12  \n13      public Library() {\n14          addBook(new Book(\"Effective Java\", \"Joshua Bloch\"));\n15          addBook(new Book(\"Java Concurrency in Practice\", \"Brian Goetz\"));\n16      }\n17  ",
            "lineNumber": 7,
            "variables": {
              "encoderDecoder": "Encoder",
              "file": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/Library.java",
              "kind": "Module",
              "name": "sun.misc.BASE64Encoder",
              "package": "com.konveyor"
            }
          }
        ]
      }
    },
    "unmatched": [
      "java-removals-00020",
      "java-removals-00030",
      "java-removals-00010",
      "java-removals-00050",
      "java-removals-00100",
      "java-removals-00150",
      "removed-javaee-modules-00000",
      "removed-javaee-modules-00020",
      "removed-javaee-modules-00010",
      "java-removals-00041",
      "java-removals-00060",
      "java-removals-00000",
      "java-removals-00130",
      "java-removals-00040",
      "java-removals-00140",
      "java-removals-00110"
    ]
  },
  {
    "name": "eap8/eap7",
    "description": "This ruleset provides analysis of Java EE applications that need to change certain CDI-related method calls.",
    "violations": {
      "javax-to-jakarta-dependencies-00001": {
        "description": "The 'javax' groupId has been replaced by 'jakarta' group id in dependencies.",
        "category": "mandatory",
        "labels": [
          "konveyor.io/target=jakarta-ee9+",
          "konveyor.io/target=jakarta-ee",
          "konveyor.io/target=eap8",
          "konveyor.io/target=eap",
          "konveyor.io/target=jws6+",
          "konveyor.io/target=jws",
          "konveyor.io/source"
        ],
        "incidents": [
          {
            "uri": "file:///Users/sraghuna/local_dev/migrationex/pom.xml",
            "message": "Update the group dependency by replacing the `javax.` groupId with `jakarta.`",
            "codeSnip": "14  \n15      <dependencies>\n16          <dependency>\n17              <groupId>junit</groupId>\n18              <artifactId>junit</artifactId>\n19              <version>4.13.2</version>\n20              <scope>test</scope>\n21          </dependency>\n22              <dependency>\n23          <groupId>javax.servlet</groupId>\n24          <artifactId>javax.servlet-api</artifactId>\n25          <version>4.0.1</version>\n26          <scope>provided</scope>\n27      </dependency>\n28      </dependencies>\n29  \n30      <build>\n31          <plugins>\n32              <plugin>\n33                  <groupId>org.apache.maven.plugins</groupId>\n34                  <artifactId>maven-compiler-plugin</artifactId>",
            "lineNumber": 23,
            "variables": {
              "matchingText": "servlet"
            }
          }
        ]
      },
      "javax-to-jakarta-dependencies-00002": {
        "description": "The artifactIds starting with javax.*-api must be updated to their corresponding jakarta.*-api versions in dependency files",
        "category": "mandatory",
        "labels": [
          "konveyor.io/target=jakarta-ee9+",
          "konveyor.io/target=jakarta-ee",
          "konveyor.io/target=eap8",
          "konveyor.io/target=eap",
          "konveyor.io/target=jws6+",
          "konveyor.io/target=jws",
          "konveyor.io/source"
        ],
        "incidents": [
          {
            "uri": "file:///Users/sraghuna/local_dev/migrationex/pom.xml",
            "message": "Update artifact dependency by replacing the `javax.-api` artifactId with `jakarta.-api`",
            "codeSnip": "15      <dependencies>\n16          <dependency>\n17              <groupId>junit</groupId>\n18              <artifactId>junit</artifactId>\n19              <version>4.13.2</version>\n20              <scope>test</scope>\n21          </dependency>\n22              <dependency>\n23          <groupId>javax.servlet</groupId>\n24          <artifactId>javax.servlet-api</artifactId>\n25          <version>4.0.1</version>\n26          <scope>provided</scope>\n27      </dependency>\n28      </dependencies>\n29  \n30      <build>\n31          <plugins>\n32              <plugin>\n33                  <groupId>org.apache.maven.plugins</groupId>\n34                  <artifactId>maven-compiler-plugin</artifactId>\n35                  <version>3.8.1</version>",
            "lineNumber": 24,
            "variables": {
              "matchingText": "servlet"
            }
          }
        ]
      },
      "javax-to-jakarta-import-00001": {
        "description": "The package 'javax' has been replaced by 'jakarta'.",
        "category": "mandatory",
        "labels": [
          "konveyor.io/target=jakarta-ee9+",
          "konveyor.io/target=jakarta-ee",
          "konveyor.io/target=eap8",
          "konveyor.io/target=eap",
          "konveyor.io/target=jws6+",
          "konveyor.io/target=jws",
          "konveyor.io/source"
        ],
        "incidents": [
          {
            "uri": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/LibraryServlet.java",
            "message": "Replace the `javax.servlet` import statement with `jakarta.servlet`",
            "codeSnip": " 1  package com.konveyor;\n 2  \n 3  import java.io.IOException;\n 4  import java.util.Optional;\n 5  \n 6  import javax.servlet.ServletException;\n 7  import javax.servlet.http.HttpServlet;\n 8  import javax.servlet.http.HttpServletRequest;\n 9  import javax.servlet.http.HttpServletResponse;\n10  \n11  public class LibraryServlet extends HttpServlet {\n12  \t  private static final long serialVersionUID = 1L;\n13  \t    private Library library = new Library();\n14  \n15  \t    @Override\n16  \t    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n17  \t        String title = request.getParameter(\"title\");\n18  \t        response.setContentType(\"text/plain\");",
            "lineNumber": 8,
            "variables": {
              "file": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/LibraryServlet.java",
              "kind": "Module",
              "name": "javax.servlet.http.HttpServletRequest",
              "package": "com.konveyor",
              "renamed": "servlet"
            }
          },
          {
            "uri": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/LibraryServlet.java",
            "message": "Replace the `javax.servlet` import statement with `jakarta.servlet`",
            "codeSnip": " 1  package com.konveyor;\n 2  \n 3  import java.io.IOException;\n 4  import java.util.Optional;\n 5  \n 6  import javax.servlet.ServletException;\n 7  import javax.servlet.http.HttpServlet;\n 8  import javax.servlet.http.HttpServletRequest;\n 9  import javax.servlet.http.HttpServletResponse;\n10  \n11  public class LibraryServlet extends HttpServlet {\n12  \t  private static final long serialVersionUID = 1L;\n13  \t    private Library library = new Library();\n14  \n15  \t    @Override\n16  \t    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n17  \t        String title = request.getParameter(\"title\");\n18  \t        response.setContentType(\"text/plain\");\n19  ",
            "lineNumber": 9,
            "variables": {
              "file": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/LibraryServlet.java",
              "kind": "Module",
              "name": "javax.servlet.http.HttpServletResponse",
              "package": "com.konveyor",
              "renamed": "servlet"
            }
          },
          {
            "uri": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/LibraryServlet.java",
            "message": "Replace the `javax.servlet` import statement with `jakarta.servlet`",
            "codeSnip": " 1  package com.konveyor;\n 2  \n 3  import java.io.IOException;\n 4  import java.util.Optional;\n 5  \n 6  import javax.servlet.ServletException;\n 7  import javax.servlet.http.HttpServlet;\n 8  import javax.servlet.http.HttpServletRequest;\n 9  import javax.servlet.http.HttpServletResponse;\n10  \n11  public class LibraryServlet extends HttpServlet {\n12  \t  private static final long serialVersionUID = 1L;\n13  \t    private Library library = new Library();\n14  \n15  \t    @Override\n16  \t    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n17  \t        String title = request.getParameter(\"title\");",
            "lineNumber": 7,
            "variables": {
              "file": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/LibraryServlet.java",
              "kind": "Module",
              "name": "javax.servlet.http.HttpServlet",
              "package": "com.konveyor",
              "renamed": "servlet"
            }
          },
          {
            "uri": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/LibraryServlet.java",
            "message": "Replace the `javax.servlet` import statement with `jakarta.servlet`",
            "codeSnip": " 1  package com.konveyor;\n 2  \n 3  import java.io.IOException;\n 4  import java.util.Optional;\n 5  \n 6  import javax.servlet.ServletException;\n 7  import javax.servlet.http.HttpServlet;\n 8  import javax.servlet.http.HttpServletRequest;\n 9  import javax.servlet.http.HttpServletResponse;\n10  \n11  public class LibraryServlet extends HttpServlet {\n12  \t  private static final long serialVersionUID = 1L;\n13  \t    private Library library = new Library();\n14  \n15  \t    @Override\n16  \t    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "lineNumber": 6,
            "variables": {
              "file": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/LibraryServlet.java",
              "kind": "Module",
              "name": "javax.servlet.ServletException",
              "package": "com.konveyor",
              "renamed": "servlet"
            }
          },
          {
            "uri": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/Library.java",
            "message": "Replace the `javax.servlet` import statement with `jakarta.servlet`",
            "codeSnip": " 1  package com.konveyor;\n 2  \n 3  \n 4  import java.io.IOException;\n 5  import java.util.*;\n 6  import java.security.*;\n 7  import sun.misc.BASE64Encoder;\n 8  import javax.servlet.http.HttpServletResponse;\n 9  \n10  public class Library {\n11      private Map<String, Book> books = new HashMap<>();\n12  \n13      public Library() {\n14          addBook(new Book(\"Effective Java\", \"Joshua Bloch\"));\n15          addBook(new Book(\"Java Concurrency in Practice\", \"Brian Goetz\"));\n16      }\n17  \n18      public void addBook(Book book) {",
            "lineNumber": 8,
            "variables": {
              "file": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/Library.java",
              "kind": "Module",
              "name": "javax.servlet.http.HttpServletResponse",
              "package": "com.konveyor",
              "renamed": "servlet"
            }
          }
        ]
      }
    },
    "unmatched": [
      "javaee-to-jakarta-namespaces-00003",
      "javaee-to-jakarta-namespaces-00001",
      "javaee-to-jakarta-namespaces-00002",
      "javaee-to-jakarta-namespaces-00005",
      "javaee-to-jakarta-namespaces-00006",
      "javaee-to-jakarta-namespaces-00004",
      "javaee-to-jakarta-namespaces-00009",
      "javaee-to-jakarta-namespaces-00007",
      "javaee-to-jakarta-namespaces-00008",
      "javaee-to-jakarta-namespaces-00010",
      "javaee-to-jakarta-namespaces-00011",
      "javaee-to-jakarta-namespaces-00013",
      "javaee-to-jakarta-namespaces-00012",
      "javaee-to-jakarta-namespaces-00014",
      "javaee-to-jakarta-namespaces-00015",
      "javaee-to-jakarta-namespaces-00016",
      "javaee-to-jakarta-namespaces-00018",
      "javaee-to-jakarta-namespaces-00017",
      "javaee-to-jakarta-namespaces-00020",
      "javaee-to-jakarta-namespaces-00019",
      "javaee-to-jakarta-namespaces-00021",
      "javaee-to-jakarta-namespaces-00022",
      "javaee-to-jakarta-namespaces-00023",
      "javaee-to-jakarta-namespaces-00024",
      "javaee-to-jakarta-namespaces-00026",
      "javaee-to-jakarta-namespaces-00028",
      "javaee-to-jakarta-namespaces-00025",
      "javaee-to-jakarta-namespaces-00029",
      "javaee-to-jakarta-namespaces-00030",
      "javaee-to-jakarta-namespaces-00027",
      "javaee-to-jakarta-namespaces-00031",
      "javaee-to-jakarta-namespaces-00032",
      "javaee-to-jakarta-namespaces-00033",
      "javaee-to-jakarta-namespaces-00034",
      "javaee-to-jakarta-namespaces-00036",
      "javaee-to-jakarta-namespaces-00035",
      "javaee-to-jakarta-namespaces-00037",
      "javaee-to-jakarta-namespaces-00039",
      "javaee-to-jakarta-namespaces-00040",
      "javaee-to-jakarta-namespaces-00038",
      "javaee-to-jakarta-namespaces-00041",
      "javaee-to-jakarta-namespaces-00043",
      "javaee-to-jakarta-namespaces-00042",
      "javaee-to-jakarta-namespaces-00046",
      "javaee-to-jakarta-namespaces-00044",
      "javaee-to-jakarta-namespaces-00045",
      "javaee-to-jakarta-namespaces-00047",
      "javax-to-jakarta-bootstrapping-files-00001",
      "javaee-to-jakarta-namespaces-00048",
      "javaee-to-jakarta-namespaces-00050",
      "javaee-to-jakarta-namespaces-00051",
      "javaee-to-jakarta-namespaces-00049",
      "javax-to-jakarta-dependencies-00004",
      "javaee-to-jakarta-namespaces-00052",
      "javaee-to-jakarta-namespaces-00053",
      "javaee-to-jakarta-namespaces-00054",
      "javaee-to-jakarta-namespaces-00055",
      "javax-to-jakarta-servlet-00010",
      "javaee-to-jakarta-namespaces-00056",
      "javax-to-jakarta-dependencies-00003",
      "javax-to-jakarta-dependencies-00005",
      "javax-to-jakarta-servlet-00030",
      "javax-to-jakarta-dependencies-00007",
      "javax-to-jakarta-dependencies-00006",
      "javax-to-jakarta-dependencies-00008",
      "javax-to-jakarta-servlet-00071",
      "javax-to-jakarta-properties-00001",
      "javax-to-jakarta-servlet-00072",
      "javax-to-jakarta-servlet-00041",
      "javax-to-jakarta-servlet-00042",
      "javax-to-jakarta-servlet-00043",
      "javax-to-jakarta-servlet-00020",
      "javax-to-jakarta-servlet-00040",
      "javax-to-jakarta-servlet-00070",
      "javax-to-jakarta-servlet-00050",
      "javax-to-jakarta-servlet-00060",
      "javax-to-jakarta-servlet-00090",
      "javax-to-jakarta-servlet-00101",
      "javax-to-jakarta-servlet-00080",
      "javax-to-jakarta-servlet-00130",
      "javax-to-jakarta-servlet-00100",
      "javax-to-jakarta-servlet-00110",
      "javax-to-jakarta-servlet-00102",
      "javax-to-jakarta-servlet-00111",
      "javax-to-jakarta-servlet-00121",
      "javax-to-jakarta-servlet-00122",
      "javax-to-jakarta-servlet-00112",
      "javax-to-jakarta-servlet-00120",
      "javax-to-jakarta-servlet-00123"
    ],
    "skipped": [
      "eap8-faces-00001",
      "eap8-faces-00002",
      "eap8-faces-00003",
      "eap8-faces-00004",
      "eap8-faces-00005",
      "eap8-faces-00006",
      "eap8-faces-00007",
      "eap8-faces-00008",
      "eap8-faces-00009",
      "eap8-resteasy-00001",
      "eap8-resteasy-00002",
      "eap8-resteasy-00003",
      "eap8-resteasy-00004",
      "eap8-resteasy-00005",
      "eap8-resteasy-00006",
      "eap8-resteasy-00007",
      "eap8-resteasy-00008",
      "eap8-resteasy-00009",
      "eap8-resteasy-00010",
      "eap8-resteasy-00011",
      "eap8-xml-binding-00001",
      "eap8-xml-binding-00002",
      "eap8-xml-binding-00003",
      "eap8-xml-binding-00004",
      "eap8-xml-binding-00005",
      "eap8-xml-binding-00006",
      "eap8-xml-binding-00007",
      "eap8-xml-binding-00008",
      "eap8-xml-binding-00009",
      "eap8-ejb-00001",
      "eap8-ejb-00002",
      "eap8-ejb-00003",
      "deprecated-initialcontextfactory-is-removed-00001",
      "empty-beans-xml-00001",
      "hibernate-6.2-00010",
      "hibernate-6.2-00020",
      "hibernate-6.2-00030",
      "hibernate-6.2-00040",
      "hibernate-6.2-00050",
      "hibernate-search-6.1-00010",
      "hibernate-search-6.1-00020",
      "hibernate-search-6.1-00030",
      "hibernate-search-6.1-00040",
      "hibernate-search-6.1-00050",
      "hibernate-search-6.1-00060",
      "hibernate-search-6.1-00070",
      "hibernate-search-6.1-00080",
      "hibernate-search-6.1-00090",
      "hibernate-search-6.1-00100",
      "hibernate-search-6.1-00120",
      "hibernate-search-6.1-00130",
      "hibernate-search-6.1-00140",
      "hibernate-search-6.1-00150",
      "hibernate-search-6.1-00160",
      "hibernate-search-6.1-00170",
      "hibernate-search-6.1-00180",
      "hibernate-search-6.1-00190",
      "hibernate-search-00010",
      "hibernate-search-00020",
      "hibernate-search-00030",
      "hibernate-search-00040",
      "hibernate-search-00050",
      "hibernate-search-00060",
      "hibernate-search-00070",
      "hibernate-search-00080",
      "hibernate-search-00090",
      "hibernate-search-00100",
      "hibernate-search-00105",
      "hibernate-search-00110",
      "hibernate-search-00120",
      "hibernate-search-00140",
      "hibernate-search-00150",
      "hibernate-search-00160",
      "hibernate-search-00170",
      "hibernate-search-00180",
      "hibernate-search-00190",
      "hibernate-search-00200",
      "hibernate-search-00210",
      "hibernate-search-00220",
      "hibernate-search-00230",
      "hibernate-search-00240",
      "hibernate-search-00250",
      "hibernate-search-00260",
      "hibernate-search-00270",
      "hibernate-search-00280",
      "hibernate-search-00290",
      "hibernate-search-00300",
      "hibernate-search-00310",
      "hibernate-search-00320",
      "hibernate-search-00330",
      "hibernate-search-00340",
      "hibernate-search-00350",
      "hibernate-search-00360",
      "hibernate-search-00370",
      "hibernate-search-00380",
      "hibernate-search-00390",
      "hibernate-search-00400",
      "hibernate-search-00410",
      "hibernate-search-00420",
      "hibernate-search-00430",
      "hibernate-search-00440",
      "hibernate-search-00450",
      "hibernate-search-00460",
      "hibernate-search-00470",
      "hibernate-search-00480",
      "hibernate-search-00490",
      "hibernate-search-00500",
      "hibernate-search-00510",
      "hibernate-search-00520",
      "hibernate-search-00530",
      "hibernate-search-00540",
      "hibernate-search-00550",
      "hibernate-search-00560",
      "hibernate-search-00570",
      "hibernate-search-00580",
      "hibernate-search-00590",
      "hibernate-search-00600",
      "hibernate-search-00610",
      "hibernate-search-00620",
      "hibernate-search-00630",
      "hibernate-search-00640",
      "hibernate-search-00650",
      "hibernate-search-00660",
      "hibernate-search-00670",
      "hibernate-search-00680",
      "hibernate-search-00690",
      "hibernate-search-00700",
      "hibernate-search-00710",
      "hibernate-search-00720",
      "hibernate-search-00730",
      "hibernate-search-00740",
      "hibernate-search-00750",
      "hibernate-search-00760",
      "hibernate-search-00770",
      "hibernate-search-00780",
      "hibernate-search-00790",
      "hibernate-search-00800",
      "hibernate-search-00810",
      "hibernate-search-00820",
      "hibernate-search-00830",
      "hibernate-search-00840",
      "hibernate-search-00850",
      "hibernate-search-00860",
      "hibernate-search-00870",
      "hibernate-search-00880",
      "hibernate-search-00890",
      "hibernate-search-00900",
      "hibernate-search-00910",
      "hibernate-search-00920",
      "hibernate-search-00930",
      "hibernate-search-00940",
      "hibernate-search-00950",
      "hibernate-search-00960",
      "hibernate-search-00970",
      "hibernate-search-00980",
      "hibernate-search-00990",
      "hibernate-search-01000",
      "hibernate-search-01010",
      "hibernate-search-01020",
      "hibernate-search-01030",
      "hibernate-search-01040",
      "hibernate-00005",
      "hibernate-00010",
      "hibernate6-00020",
      "hibernate6-00030",
      "hibernate6-00040",
      "hibernate6-00050",
      "hibernate6-00060",
      "hibernate6-00070",
      "hibernate6-00080",
      "hibernate6-00090",
      "hibernate6-00100",
      "hibernate6-00110",
      "hibernate6-00120",
      "hibernate6-00130",
      "hibernate6-00140",
      "hibernate6-00150",
      "hibernate6-00160",
      "hibernate6-00170",
      "hibernate6-00180",
      "hibernate6-00190",
      "hibernate6-00200",
      "hibernate6-00210",
      "hibernate6-00220",
      "hibernate6-00230",
      "hibernate6-00240",
      "hibernate6-00250",
      "hibernate6-00251",
      "hibernate6-00252",
      "hibernate6-00253",
      "hibernate6-00254",
      "hibernate6-00255",
      "hibernate6-00257",
      "hibernate6-00270",
      "hibernate6-00280",
      "jakarta-cdi-00001",
      "jakarta-cdi-00002",
      "jakarta-cdi-00003",
      "jakarta-cdi-00004",
      "jakarta-el-00010",
      "jakarta-el-00020",
      "jakarta-faces-00001",
      "jakarta-json-binding-00010",
      "jakarta-soap-00010",
      "jakarta-soap-00020",
      "jakarta-ws-rs-00001",
      "jboss-dependencies-00001",
      "jboss-dependencies-00002",
      "jboss-dependencies-00003",
      "jboss-dependencies-00004",
      "jboss-dependencies-00005",
      "jboss-dependencies-00006",
      "jboss-dependencies-00007",
      "jboss-dependencies-00008",
      "jboss-dependencies-00009",
      "jboss-dependencies-00010",
      "jboss-dependencies-00011",
      "jboss-dependencies-00012",
      "jboss-dependencies-00013",
      "jboss-dependencies-00014",
      "jboss-dependencies-00015",
      "jboss-dependencies-00016",
      "jboss-dependencies-00017",
      "jboss-dependencies-00018",
      "jboss-dependencies-00019",
      "jboss-dependencies-00020",
      "jboss-dependencies-00021",
      "jboss-dependencies-00022",
      "jboss-dependencies-00023",
      "jboss-dependencies-00024",
      "jboss-dependencies-00025",
      "jboss-dependencies-00026",
      "jboss-dependencies-00027",
      "jboss-dependencies-00028",
      "jboss-dependencies-00030",
      "jboss-dependencies-00031",
      "jboss-dependencies-00032",
      "keycloak-openid-00001",
      "keycloak-openid-00010",
      "legacy-vault-00010",
      "log4j-removed-00001",
      "log4j-removed-00002",
      "log4j-removed-00003",
      "log4j-removed-00004",
      "log4j-removed-00005",
      "login-modules-00001",
      "picketlink-00010",
      "picketlink-00020"
    ]
  },
  {
    "name": "custom/security",
    "description": "This is a custom security ruleset",
    "violations": {
      "java-custom-security-00001": {
        "description": "Do not use MD5 for hashing due to security vulnerabilities.",
        "category": "mandatory",
        "labels": [
          "konveyor.io/source=java8",
          "konveyor.io/source=openjdk",
          "konveyor.io/target=openjdk17"
        ],
        "incidents": [
          {
            "uri": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/Library.java",
            "message": "The MD5 algorithm is **outdated** and should not be used for secure hashing.\nInstead, use **SHA-256** or **SHA-512**.\n\n**Fix:**\n```java\n// Deprecated MD5 usage\nMessageDigest md = MessageDigest.getInstance(\"MD5\");\n\n// Recommended SHA-256 usage\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n```\n",
            "codeSnip": "32  \n33      public void printBooks(HttpServletResponse response) throws IOException {\n34          for (Book book : books.values()) {\n35              response.getWriter().println(book);\n36          }\n37      }\n38  \n39  \n40      private String generateHash(String input) {\n41          try {\n42              MessageDigest md5Digest = MessageDigest.getInstance(\"MD5\"); \n43              byte[] hash = md5Digest.digest(input.getBytes());\n44              BASE64Encoder encoder = new BASE64Encoder(); \n45              return encoder.encode(hash);\n46          } catch (NoSuchAlgorithmException e) {\n47              e.printStackTrace();\n48              return null;\n49          }\n50      }\n51  }\n",
            "lineNumber": 42,
            "variables": {
              "file": "file:///Users/sraghuna/local_dev/migrationex/src/main/java/com/konveyor/Library.java",
              "kind": "Method",
              "name": "generateHash",
              "package": "com.konveyor"
            }
          }
        ]
      }
    }
  }
]